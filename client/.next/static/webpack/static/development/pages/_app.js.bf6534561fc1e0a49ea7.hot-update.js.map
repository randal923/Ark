{"version":3,"file":"static/webpack/static/development/pages/_app.js.bf6534561fc1e0a49ea7.hot-update.js","sources":["webpack:///./node_modules/@jesstelford/react-portal-universal/PortalManager.js","webpack:///./node_modules/@jesstelford/react-portal-universal/index.js","webpack:///./pages/_app.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst PortalContext = React.createContext([]);\nexports.PortalConsumer = PortalContext.Consumer;\nexports.PortalManager = ({ children, portals }) => (React.createElement(PortalContext.Provider, { value: portals }, children));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactDOM = require(\"react-dom\");\nconst PortalManager_1 = require(\"./PortalManager\");\nfunction canUseDOM() {\n    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction createUniversalPortal(children, selector, portals) {\n    if (!canUseDOM()) {\n        portals.push([children, selector]); // yes, mutation (҂◡_◡)\n        return null; // do not render anything on the server\n    }\n    // TODO: Do not cast to any when typings are updated for createPortal\n    return ReactDOM.createPortal(children, document.querySelector(selector));\n}\nfunction prepareClientPortals() {\n    if (canUseDOM()) {\n        Array.prototype.slice.call(document.querySelectorAll(\"[data-react-universal-portal]\")).forEach(function (node) {\n            node.remove();\n        });\n    }\n}\nexports.prepareClientPortals = prepareClientPortals;\nexports.UniversalPortal = ({ children, selector }) => (React.createElement(PortalManager_1.PortalConsumer, null, (portals) => createUniversalPortal(children, selector, portals)));\n","import { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from './redux';\n\nimport { prepareClientPortals } from '@jesstelford/react-portal-universal';\n\nif (typeof window !== 'undefined') {\n\t// On the client, we have to run this once before React attempts a render.\n\t// Here in _app is a great place to do it as this file is only required once,\n\t// and right now (outside the constructor) is before React is invoked.\n\tprepareClientPortals();\n}\n\nclass Main extends App {\n\tstatic async getInitialProps({ Component, context }) {\n\t\treturn {\n\t\t\tpageProps: Component.getInitialProps ? await Component.getInitialProps(context) : {},\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { Component, pageProps, store } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<Component {...pageProps} />\n\t\t\t\t</Provider>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withRedux(initStore)(Main);\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AAfA;AACA;AACA;;;;;;AAAA;AACA;;;;;;;AADA;AACA;;;;AADA;;;;;;;;;;;;;AAHA;AACA;AAkBA;;;;A","sourceRoot":""}